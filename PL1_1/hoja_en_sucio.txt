    https://github.com/AdriDmgz/PlanifAutomatica-Planners
    (:action salir_del_deposito_cargado_entero
        :parameters (?d - dron ?u1 - ubi ?u2 - ubi)
        :precondition (and
            (ubi-dron ?d ?u1)
            (dron-en-deposito ?d)
            ;(dron-modo-carga-descarga ?d)
            ;(dron-cargadob1 ?d)
            ;(dron-cargadob2 ?d)
        )

        :effect (and
            (dron-volando ?d)
            (not(dron-en-deposito ?d))
            (not(ubi-dron ?d ?u1))
            ;(not(dron-modo-carga-descarga ?d))
            (ubi-dron ?d ?u2)
        )
    )
    (:action salir_del_deposito_cargado_mitad
        :parameters (?d - dron ?u1 - ubi ?u2 - ubi)
        :precondition (and
            (ubi-dron ?d ?u1)
            (dron-en-deposito ?d)
            ;(dron-modo-carga-descarga ?d)
            ;(dron-cargadob1 ?d)
        )

        :effect (and
            (dron-volando ?d)
            (not(dron-en-deposito ?d))
            (not(ubi-dron ?d ?u1))
            (ubi-dron ?d ?u2)
        )
    )

        (:action coger_con_brazo1
        :parameters (?u - ubi ?d - dron ?c - caja ?con - contenido)
        :precondition (and
            (dron-en-deposito ?d)
            (ubi-dron ?d ?u)
            (ubi-caja ?c ?u)
            (contenido-caja ?con ?c)
            (free-brazo1 ?d)
        )
        :effect (and
            (brazo1-lleno ?d ?c ?con)
            (not(ubi-caja ?c ?u))
            (not(free-brazo1 ?d))
            ;(dron-modo-carga-descarga ?d)
            ;(dron-cargadob1 ?d)
        )
    )

    (:action coger_con_brazo2
        :parameters (?u - ubi ?d - dron ?c - caja ?con - contenido)
        :precondition (and
            (dron-en-deposito ?d)
            (ubi-dron ?d ?u)
            (ubi-caja ?c ?u)
            (contenido-caja ?con ?c)
            (free-brazo2 ?d)
        )
        :effect (and
            (brazo2-lleno ?d ?c ?con)
            (not(ubi-caja ?c ?u))
            (not(free-brazo2 ?d))
            ;(dron-modo-carga-descarga ?d)
            ;(dron-cargadob2 ?d)
        )
    )


-------------------------------------------------------------
-------------------------------------------------------------

(define (domain pl1_domain_fluents)

    (:requirements :strips :typing :fluents)
    (:types
        dron brazo humano caja ubicacion contenido - object
    )

    (:predicates
        (ubicacion-humano ?h - humano ?u - ubicacion)
        (humano-necesita ?h - humano ?con - contenido)
        (humano-satisfecho ?h - humano ?con - contenido)

        (ubicacion-dron ?d - dron ?u - ubicacion)

        (volando ?d - dron)

        (brazo-ocupado ?d - dron ?b - brazo ?c - caja ?con - contenido)
        (free ?d - dron ?b - brazo)
        (brazo-dron ?d - dron ?b - brazo)

        (ubicacion-caja ?c - caja ?u - ubicacion)
        (contenido-caja ?con - contenido ?c - caja)

        (caja-en-brazo ?c - caja ?d - dron ?b - brazo)

    )


    (:functions
        (distancia-recorrida)
        (brazos-ocupados)
    )


    (:action coger_caja
        :parameters (?u - ubicacion ?d - dron ?b - brazo ?c - caja ?con - contenido)
        :precondition (and
            (brazo-dron ?d ?b)
            (ubicacion-dron ?d ?u)
            (ubicacion-caja ?c ?u)
            (contenido-caja ?con ?c)
            (free ?d ?b)
            (< (brazos-ocupados) 2)
        )
        :effect (and
            (not(free ?d ?b))
            (caja-en-brazo ?c ?d ?b)
            (brazo-ocupado ?d ?b ?c ?con)
            (increase (brazos-ocupados) 1)
        )
    )



    (:action volar
        :parameters (?d - dron ?origen - ubicacion ?destino - ubicacion)
        :precondition (and
            (ubicacion-dron ?d ?origen)
        )
        :effect (and
            (not(ubicacion-dron ?d ?origen))
            (ubicacion-dron ?d ?destino)
            (volando ?d)
            (increase (distancia-recorrida) 5)
        )
    )

    (:action entregar_caja
        :parameters (?u - ubicacion ?d - dron ?b - brazo ?c - caja ?con - contenido ?h - humano)
        :precondition (and
            (brazo-dron ?d ?b)
            (humano-necesita ?h ?con)
            (ubicacion-dron ?d ?u)
            (ubicacion-humano ?h ?u)
            (contenido-caja ?con ?c)
            (brazo-ocupado ?d ?b ?c ?con)
            (caja-en-brazo ?c ?d ?b)
            )
        :effect (and
            (not(caja-en-brazo ?c ?d ?b))
            (not(humano-necesita ?h ?con))
            (not(brazo-ocupado ?d ?b ?c ?con))
            (humano-satisfecho ?h ?con)
            (decrease (brazos-ocupados) 1)
            )
    )

)
-------------------------------------------------------------
-------------------------------------------------------------














